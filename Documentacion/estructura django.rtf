{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang10\par
\b Aplicaci\'f3n 1: Gesti\'f3n de Usuarios\par
\b0 Esta aplicaci\'f3n manejar\'e1 todo lo relacionado con el registro, inicio de sesi\'f3n y autenticaci\'f3n de usuarios.\par
\b Tareas relacionadas:\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Frontend:\b0\par
{\pntext\f1\'B7\tab}Interfaz del formulario de registro (tk01 a tk06)\par
{\pntext\f1\'B7\tab}Interfaz del inicio de sesi\'f3n (tk01 a tk03)\par
{\pntext\f1\'B7\tab}\b Backend:\b0\par
{\pntext\f1\'B7\tab}Validar y almacenar la informaci\'f3n del usuario (tk01 a tk03)\par
{\pntext\f1\'B7\tab}Verificar credenciales y autenticar al usuario (tk01 a tk03)\par

\pard\sa200\sl276\slmult1\b Aplicaci\'f3n 2: Productos\par
\b0 Manejar\'e1 la l\'f3gica del cat\'e1logo, productos y filtrado.\par
\b Tareas relacionadas\b0 :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b Frontend\b0 :\par
{\pntext\f1\'B7\tab}Crear la interfaz del cat\'e1logo (tk01)\par
{\pntext\f1\'B7\tab}Crear el detalle de producto y su interfaz (tk01)\par
{\pntext\f1\'B7\tab}Crear un sistema de filtros y la barra de b\'fasqueda (tk03 del filtro y b\'fasqueda)\par
{\pntext\f1\'B7\tab}Secci\'f3n de categor\'edas de videojuegos (tk01)\par
{\pntext\f1\'B7\tab}\b Backend\b0 :\par
{\pntext\f1\'B7\tab}Obtener y mostrar datos del cat\'e1logo (tk01 a tk03)\par
{\pntext\f1\'B7\tab}Recuperar los datos de la skin seleccionada (tk01 a tk03)\par
{\pntext\f1\'B7\tab}Implementar la l\'f3gica para filtrar y buscar skins (tk01 a tk03 del backend)\par
{\pntext\f1\'B7\tab}Crear el endpoint para acceder a las categor\'edas de videojuegos desde la base de datos (tk01 a tk03)\par

\pard\sa200\sl276\slmult1\b Aplicaci\'f3n 3: Carrito\par
\b0 Manejar\'e1 las funcionalidades del carrito, el flujo de compra y las transacciones.\par
\b Tareas relacionadas:\par
Frontend\b0 :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Bot\'f3n de carrito en el header (tk03 del header)\par
{\pntext\f1\'B7\tab}Interfaz del carrito para a\'f1adir/eliminar productos\par
{\pntext\f1\'B7\tab}Interfaz de la pasarela de pago (tk01)\par

\pard\sa200\sl276\slmult1\b Backend\b0 :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Vincular el carrito con la base de datos (tk01 a tk02)\par
{\pntext\f1\'B7\tab}Confirmar y procesar la compra (tk01)\par
{\pntext\f1\'B7\tab}Crear el endpoint para procesar pagos y validar informaci\'f3n (tk01 a tk02)\par
{\pntext\f1\'B7\tab}Pop-up de confirmaci\'f3n de compra y env\'edo de c\'f3digos (tk01 a tk02 del frontend)\par

\pard\sa200\sl276\slmult1\b Aplicaci\'f3n 4: Interfaz General (UI)\par
\b0 Esta aplicaci\'f3n ser\'e1 la responsable de los elementos comunes de la interfaz.\par
\b Tareas relacionadas:\par
Frontend\b0 :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Crear el header con botones y buscador (tk01 a tk04)\par
{\pntext\f1\'B7\tab}Crear un bot\'f3n de usuario en el header\par
{\pntext\f1\'B7\tab}Crear el footer y unificar la vista principal (tk01 a tk06)\par
{\pntext\f1\'B7\tab}Crear el carrusel de mensajes promocionales\par

\pard\sa200\sl276\slmult1\b Aplicaci\'f3n 5: Pagos y Pedidos\b0\par
Esta aplicaci\'f3n puede manejar espec\'edficamente el procesamiento de pagos y validar las transacciones.\par
\b Tareas relacionadas:\par
Backend\b0 :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Implementar la l\'f3gica de pagos (tk01 a tk02)\par
{\pntext\f1\'B7\tab}Configurar la base de datos para transacciones (tk01)\par

\pard\sa200\sl276\slmult1\par
\ul\fs32\par

\pard\sa200\sl276\slmult1\par
Glosario:\ulnone\fs22\par
\par

\pard 
{\pntext\f0 i.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pnlcrm{\pntxta.}}
\fi-360\li720\sa200\sl276\slmult1 Proyecto general: al iniciar Django, de ahora en m\'e1s, cuando lo cite "proyecto ra\'edz".\par
{\pntext\f0 ii.\tab}Aplicaciones: son los distintos m\'f3dulos de los que se compone el proyecto general, explicados en detalle al principio.\par
{\pntext\f0 iii.\tab}Templates: carpeta destinada a guardar los HTML.\par
{\pntext\f0 iv.\tab}Static: carpeta destinada a guardar CSS, JavaScript, im\'e1genes, etc.\par
{\pntext\f0 v.\tab}db: base de datos en SQLite3, utilizamos la ORM de Django, la cual se encuentra cargada en models.\par
{\pntext\f0 vi.\tab}urls: las rutas en las cuales vamos a hacer referencia a las funciones, previamente definidas en views.\par
{\pntext\f0 vii.\tab}views: donde realizaremos la l\'f3gica necesaria para procesar lo requerido; aqu\'ed definimos las funciones.\par
{\pntext\f0 viii.\tab}models: archivo .py donde, mediante la clase models (propia de Django), creamos la base de datos.\par

\pard\sa200\sl276\slmult1\par
\ul\fs32 Jerarqu\'eda y explicaciones generales\ulnone\fs22\par

\pard\sa200\sl276\slmult1 A grosso modo, voy a explicar la jerarqu\'eda y flujos en la estructura propuesta.\par
Vamos a iniciar nuestro proyecto ra\'edz, el cual decid\'ed nombrar como ecommerce.\par
El mismo va a estar formado por 5 aplicaciones, independientes entre s\'ed...\par
Van a notar que tanto el proyecto ra\'edz posee su template y static; lo defin\'ed de esta manera ya que hay elementos que se van a repetir independientemente de la aplicaci\'f3n que utilicemos (header, footer). As\'ed mismo, en cada aplicaci\'f3n posee su propia template y static donde referenciamos a lo del proyecto general para los elementos mencionados, y se agregar\'e1 lo solicitado dependiendo de lo que requiera cada app...\par
As\'ed mismo, si ingresan al apartado de configuraciones, notar\'e1n que en STATIC_URL = '/static/' y STATICFILES_DIRS se encuentran relacionadas las carpetas static de cada aplicaci\'f3n, con la carpeta template no es necesario referenciar cada app ya que en TEMPLATES = [\{'DIRS': [BASE_DIR / 'templates',], al estar (APP_DIRS': True), Django nos mostrar\'e1 todas las rutas que coincidan en las apps con el prefijo "templates".\par
Ahora bien, \'bfc\'f3mo verificamos que cada aplicaci\'f3n se encuentre referenciada en el proyecto ra\'edz? Esto lo vamos a ver en el apartado INSTALLED_APPS = [\par
Por \'faltimo, pero no menos importante xD, cada archivo views.py dentro de las apps se encuentra con funciones y pass; lo hice de esta manera para as\'ed poder referenciar a las urls de las aplicaciones (esto se puede ver a detalle en el urls.py de cada app) en las urls del proyecto ra\'edz, mediante el m\'e9todo include.\par
Van a notar que en las urls del proyecto ra\'edz hay definida una funci\'f3n, y esto no es un error, ya que al ejecutar, como no est\'e1 creada ninguna funci\'f3n, Django interpreta que la ruta est\'e1 vac\'eda y es correcto. Por este motivo, creo la funci\'f3n con el HttpResponse solo para iniciar el servidor con su correspondiente url; esto se borrar\'e1 una vez que arranquemos.\par
\par
\par
\b\fs28 Resumen...\par
Estructura del Proyecto\par
\b0 Proyecto Ra\'edz: Nombrado como "ecommerce", contiene todas las aplicaciones.\par
Aplicaciones: M\'f3dulos independientes dentro del proyecto, cada uno con su propia l\'f3gica y funcionalidad.\par
Templates: Carpeta para archivos HTML.\par
Static: Carpeta para archivos CSS, JavaScript, im\'e1genes, etc.\par
Base de Datos (db): Utiliza SQLite3 y Django ORM para la gesti\'f3n de datos.\par
URLs: Definidas para enlazar funciones en views.\par
Views: Contienen la l\'f3gica de las aplicaciones y las funciones a ejecutar.\par
C\'f3mo Funciona la Estructura\par
El proyecto tiene un template y un static que se pueden reutilizar en todas las aplicaciones (ej. header y footer).\par
Cada aplicaci\'f3n tambi\'e9n tiene su propio template y static para elementos espec\'edficos.\par
Las configuraciones de static se definen para que Django reconozca las carpetas correspondientes.\par
En INSTALLED_APPS, se verifican que todas las aplicaciones est\'e9n correctamente referenciadas.\par
Las funciones en views.py est\'e1n definidas con pass para permitir la referencia en las URLs mientras se desarrolla la l\'f3gica.\par
Notas Adicionales\par
Hay una funci\'f3n en las URLs del proyecto ra\'edz que permite iniciar el servidor, aunque no est\'e9 completamente implementada la l\'f3gica. Se eliminar\'e1 una vez que todo est\'e9 en funcionamiento.\par
\fs22\par
\par
\par
\par
}
 